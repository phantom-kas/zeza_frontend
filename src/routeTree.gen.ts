/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as _appRouteImport } from './routes/__app'
import { Route as _appIndexRouteImport } from './routes/__app/index'
import { Route as _appShopRouteImport } from './routes/__app/shop'
import { Route as _appManageProductsRouteImport } from './routes/__app/manage-products'
import { Route as _appManageBrandsRouteImport } from './routes/__app/manage-brands'
import { Route as _appAboutRouteImport } from './routes/__app/about'
import { Route as _appProductsIndexRouteImport } from './routes/__app/products/index'
import { Route as _appManageProductsIndexRouteImport } from './routes/__app/manage-products/index'
import { Route as _appManageBrandsIndexRouteImport } from './routes/__app/manage-brands/index'
import { Route as _appShopFilterRouteImport } from './routes/__app/shop/filter'
import { Route as _appProductIdRouteImport } from './routes/__app/product/$id'
import { Route as _appManageProductsAddRouteImport } from './routes/__app/manage-products/add'
import { Route as _appManageBrandsAddRouteImport } from './routes/__app/manage-brands/add'
import { Route as _appProductIdReviewsRouteImport } from './routes/__app/product/$id/reviews'
import { Route as _appProductIdRelatedProductsRouteImport } from './routes/__app/product/$id/related-products'
import { Route as _appProductIdCreate_reviewRouteImport } from './routes/__app/product/$id/create_review'
import { Route as _appManageProductsIdEditRouteImport } from './routes/__app/manage-products/$id.edit'
import { Route as _appManageBrandsIdEditRouteImport } from './routes/__app/manage-brands/$id.edit'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const _appRoute = _appRouteImport.update({
  id: '/__app',
  getParentRoute: () => rootRouteImport,
} as any)
const _appIndexRoute = _appIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _appRoute,
} as any)
const _appShopRoute = _appShopRouteImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => _appRoute,
} as any)
const _appManageProductsRoute = _appManageProductsRouteImport.update({
  id: '/manage-products',
  path: '/manage-products',
  getParentRoute: () => _appRoute,
} as any)
const _appManageBrandsRoute = _appManageBrandsRouteImport.update({
  id: '/manage-brands',
  path: '/manage-brands',
  getParentRoute: () => _appRoute,
} as any)
const _appAboutRoute = _appAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => _appRoute,
} as any)
const _appProductsIndexRoute = _appProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => _appRoute,
} as any)
const _appManageProductsIndexRoute = _appManageProductsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _appManageProductsRoute,
} as any)
const _appManageBrandsIndexRoute = _appManageBrandsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _appManageBrandsRoute,
} as any)
const _appShopFilterRoute = _appShopFilterRouteImport.update({
  id: '/filter',
  path: '/filter',
  getParentRoute: () => _appShopRoute,
} as any)
const _appProductIdRoute = _appProductIdRouteImport.update({
  id: '/product/$id',
  path: '/product/$id',
  getParentRoute: () => _appRoute,
} as any)
const _appManageProductsAddRoute = _appManageProductsAddRouteImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => _appManageProductsRoute,
} as any)
const _appManageBrandsAddRoute = _appManageBrandsAddRouteImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => _appManageBrandsRoute,
} as any)
const _appProductIdReviewsRoute = _appProductIdReviewsRouteImport.update({
  id: '/reviews',
  path: '/reviews',
  getParentRoute: () => _appProductIdRoute,
} as any)
const _appProductIdRelatedProductsRoute =
  _appProductIdRelatedProductsRouteImport.update({
    id: '/related-products',
    path: '/related-products',
    getParentRoute: () => _appProductIdRoute,
  } as any)
const _appProductIdCreate_reviewRoute =
  _appProductIdCreate_reviewRouteImport.update({
    id: '/create_review',
    path: '/create_review',
    getParentRoute: () => _appProductIdRoute,
  } as any)
const _appManageProductsIdEditRoute =
  _appManageProductsIdEditRouteImport.update({
    id: '/$id/edit',
    path: '/$id/edit',
    getParentRoute: () => _appManageProductsRoute,
  } as any)
const _appManageBrandsIdEditRoute = _appManageBrandsIdEditRouteImport.update({
  id: '/$id/edit',
  path: '/$id/edit',
  getParentRoute: () => _appManageBrandsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/about': typeof _appAboutRoute
  '/manage-brands': typeof _appManageBrandsRouteWithChildren
  '/manage-products': typeof _appManageProductsRouteWithChildren
  '/shop': typeof _appShopRouteWithChildren
  '/': typeof _appIndexRoute
  '/manage-brands/add': typeof _appManageBrandsAddRoute
  '/manage-products/add': typeof _appManageProductsAddRoute
  '/product/$id': typeof _appProductIdRouteWithChildren
  '/shop/filter': typeof _appShopFilterRoute
  '/manage-brands/': typeof _appManageBrandsIndexRoute
  '/manage-products/': typeof _appManageProductsIndexRoute
  '/products': typeof _appProductsIndexRoute
  '/manage-brands/$id/edit': typeof _appManageBrandsIdEditRoute
  '/manage-products/$id/edit': typeof _appManageProductsIdEditRoute
  '/product/$id/create_review': typeof _appProductIdCreate_reviewRoute
  '/product/$id/related-products': typeof _appProductIdRelatedProductsRoute
  '/product/$id/reviews': typeof _appProductIdReviewsRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/about': typeof _appAboutRoute
  '/shop': typeof _appShopRouteWithChildren
  '/': typeof _appIndexRoute
  '/manage-brands/add': typeof _appManageBrandsAddRoute
  '/manage-products/add': typeof _appManageProductsAddRoute
  '/product/$id': typeof _appProductIdRouteWithChildren
  '/shop/filter': typeof _appShopFilterRoute
  '/manage-brands': typeof _appManageBrandsIndexRoute
  '/manage-products': typeof _appManageProductsIndexRoute
  '/products': typeof _appProductsIndexRoute
  '/manage-brands/$id/edit': typeof _appManageBrandsIdEditRoute
  '/manage-products/$id/edit': typeof _appManageProductsIdEditRoute
  '/product/$id/create_review': typeof _appProductIdCreate_reviewRoute
  '/product/$id/related-products': typeof _appProductIdRelatedProductsRoute
  '/product/$id/reviews': typeof _appProductIdReviewsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__app': typeof _appRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/__app/about': typeof _appAboutRoute
  '/__app/manage-brands': typeof _appManageBrandsRouteWithChildren
  '/__app/manage-products': typeof _appManageProductsRouteWithChildren
  '/__app/shop': typeof _appShopRouteWithChildren
  '/__app/': typeof _appIndexRoute
  '/__app/manage-brands/add': typeof _appManageBrandsAddRoute
  '/__app/manage-products/add': typeof _appManageProductsAddRoute
  '/__app/product/$id': typeof _appProductIdRouteWithChildren
  '/__app/shop/filter': typeof _appShopFilterRoute
  '/__app/manage-brands/': typeof _appManageBrandsIndexRoute
  '/__app/manage-products/': typeof _appManageProductsIndexRoute
  '/__app/products/': typeof _appProductsIndexRoute
  '/__app/manage-brands/$id/edit': typeof _appManageBrandsIdEditRoute
  '/__app/manage-products/$id/edit': typeof _appManageProductsIdEditRoute
  '/__app/product/$id/create_review': typeof _appProductIdCreate_reviewRoute
  '/__app/product/$id/related-products': typeof _appProductIdRelatedProductsRoute
  '/__app/product/$id/reviews': typeof _appProductIdReviewsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/signup'
    | '/about'
    | '/manage-brands'
    | '/manage-products'
    | '/shop'
    | '/'
    | '/manage-brands/add'
    | '/manage-products/add'
    | '/product/$id'
    | '/shop/filter'
    | '/manage-brands/'
    | '/manage-products/'
    | '/products'
    | '/manage-brands/$id/edit'
    | '/manage-products/$id/edit'
    | '/product/$id/create_review'
    | '/product/$id/related-products'
    | '/product/$id/reviews'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/signup'
    | '/about'
    | '/shop'
    | '/'
    | '/manage-brands/add'
    | '/manage-products/add'
    | '/product/$id'
    | '/shop/filter'
    | '/manage-brands'
    | '/manage-products'
    | '/products'
    | '/manage-brands/$id/edit'
    | '/manage-products/$id/edit'
    | '/product/$id/create_review'
    | '/product/$id/related-products'
    | '/product/$id/reviews'
  id:
    | '__root__'
    | '/__app'
    | '/login'
    | '/signup'
    | '/__app/about'
    | '/__app/manage-brands'
    | '/__app/manage-products'
    | '/__app/shop'
    | '/__app/'
    | '/__app/manage-brands/add'
    | '/__app/manage-products/add'
    | '/__app/product/$id'
    | '/__app/shop/filter'
    | '/__app/manage-brands/'
    | '/__app/manage-products/'
    | '/__app/products/'
    | '/__app/manage-brands/$id/edit'
    | '/__app/manage-products/$id/edit'
    | '/__app/product/$id/create_review'
    | '/__app/product/$id/related-products'
    | '/__app/product/$id/reviews'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _appRoute: typeof _appRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__app': {
      id: '/__app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _appRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__app/': {
      id: '/__app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof _appIndexRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/shop': {
      id: '/__app/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof _appShopRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/manage-products': {
      id: '/__app/manage-products'
      path: '/manage-products'
      fullPath: '/manage-products'
      preLoaderRoute: typeof _appManageProductsRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/manage-brands': {
      id: '/__app/manage-brands'
      path: '/manage-brands'
      fullPath: '/manage-brands'
      preLoaderRoute: typeof _appManageBrandsRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/about': {
      id: '/__app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof _appAboutRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/products/': {
      id: '/__app/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof _appProductsIndexRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/manage-products/': {
      id: '/__app/manage-products/'
      path: '/'
      fullPath: '/manage-products/'
      preLoaderRoute: typeof _appManageProductsIndexRouteImport
      parentRoute: typeof _appManageProductsRoute
    }
    '/__app/manage-brands/': {
      id: '/__app/manage-brands/'
      path: '/'
      fullPath: '/manage-brands/'
      preLoaderRoute: typeof _appManageBrandsIndexRouteImport
      parentRoute: typeof _appManageBrandsRoute
    }
    '/__app/shop/filter': {
      id: '/__app/shop/filter'
      path: '/filter'
      fullPath: '/shop/filter'
      preLoaderRoute: typeof _appShopFilterRouteImport
      parentRoute: typeof _appShopRoute
    }
    '/__app/product/$id': {
      id: '/__app/product/$id'
      path: '/product/$id'
      fullPath: '/product/$id'
      preLoaderRoute: typeof _appProductIdRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/manage-products/add': {
      id: '/__app/manage-products/add'
      path: '/add'
      fullPath: '/manage-products/add'
      preLoaderRoute: typeof _appManageProductsAddRouteImport
      parentRoute: typeof _appManageProductsRoute
    }
    '/__app/manage-brands/add': {
      id: '/__app/manage-brands/add'
      path: '/add'
      fullPath: '/manage-brands/add'
      preLoaderRoute: typeof _appManageBrandsAddRouteImport
      parentRoute: typeof _appManageBrandsRoute
    }
    '/__app/product/$id/reviews': {
      id: '/__app/product/$id/reviews'
      path: '/reviews'
      fullPath: '/product/$id/reviews'
      preLoaderRoute: typeof _appProductIdReviewsRouteImport
      parentRoute: typeof _appProductIdRoute
    }
    '/__app/product/$id/related-products': {
      id: '/__app/product/$id/related-products'
      path: '/related-products'
      fullPath: '/product/$id/related-products'
      preLoaderRoute: typeof _appProductIdRelatedProductsRouteImport
      parentRoute: typeof _appProductIdRoute
    }
    '/__app/product/$id/create_review': {
      id: '/__app/product/$id/create_review'
      path: '/create_review'
      fullPath: '/product/$id/create_review'
      preLoaderRoute: typeof _appProductIdCreate_reviewRouteImport
      parentRoute: typeof _appProductIdRoute
    }
    '/__app/manage-products/$id/edit': {
      id: '/__app/manage-products/$id/edit'
      path: '/$id/edit'
      fullPath: '/manage-products/$id/edit'
      preLoaderRoute: typeof _appManageProductsIdEditRouteImport
      parentRoute: typeof _appManageProductsRoute
    }
    '/__app/manage-brands/$id/edit': {
      id: '/__app/manage-brands/$id/edit'
      path: '/$id/edit'
      fullPath: '/manage-brands/$id/edit'
      preLoaderRoute: typeof _appManageBrandsIdEditRouteImport
      parentRoute: typeof _appManageBrandsRoute
    }
  }
}

interface _appManageBrandsRouteChildren {
  _appManageBrandsAddRoute: typeof _appManageBrandsAddRoute
  _appManageBrandsIndexRoute: typeof _appManageBrandsIndexRoute
  _appManageBrandsIdEditRoute: typeof _appManageBrandsIdEditRoute
}

const _appManageBrandsRouteChildren: _appManageBrandsRouteChildren = {
  _appManageBrandsAddRoute: _appManageBrandsAddRoute,
  _appManageBrandsIndexRoute: _appManageBrandsIndexRoute,
  _appManageBrandsIdEditRoute: _appManageBrandsIdEditRoute,
}

const _appManageBrandsRouteWithChildren =
  _appManageBrandsRoute._addFileChildren(_appManageBrandsRouteChildren)

interface _appManageProductsRouteChildren {
  _appManageProductsAddRoute: typeof _appManageProductsAddRoute
  _appManageProductsIndexRoute: typeof _appManageProductsIndexRoute
  _appManageProductsIdEditRoute: typeof _appManageProductsIdEditRoute
}

const _appManageProductsRouteChildren: _appManageProductsRouteChildren = {
  _appManageProductsAddRoute: _appManageProductsAddRoute,
  _appManageProductsIndexRoute: _appManageProductsIndexRoute,
  _appManageProductsIdEditRoute: _appManageProductsIdEditRoute,
}

const _appManageProductsRouteWithChildren =
  _appManageProductsRoute._addFileChildren(_appManageProductsRouteChildren)

interface _appShopRouteChildren {
  _appShopFilterRoute: typeof _appShopFilterRoute
}

const _appShopRouteChildren: _appShopRouteChildren = {
  _appShopFilterRoute: _appShopFilterRoute,
}

const _appShopRouteWithChildren = _appShopRoute._addFileChildren(
  _appShopRouteChildren,
)

interface _appProductIdRouteChildren {
  _appProductIdCreate_reviewRoute: typeof _appProductIdCreate_reviewRoute
  _appProductIdRelatedProductsRoute: typeof _appProductIdRelatedProductsRoute
  _appProductIdReviewsRoute: typeof _appProductIdReviewsRoute
}

const _appProductIdRouteChildren: _appProductIdRouteChildren = {
  _appProductIdCreate_reviewRoute: _appProductIdCreate_reviewRoute,
  _appProductIdRelatedProductsRoute: _appProductIdRelatedProductsRoute,
  _appProductIdReviewsRoute: _appProductIdReviewsRoute,
}

const _appProductIdRouteWithChildren = _appProductIdRoute._addFileChildren(
  _appProductIdRouteChildren,
)

interface _appRouteChildren {
  _appAboutRoute: typeof _appAboutRoute
  _appManageBrandsRoute: typeof _appManageBrandsRouteWithChildren
  _appManageProductsRoute: typeof _appManageProductsRouteWithChildren
  _appShopRoute: typeof _appShopRouteWithChildren
  _appIndexRoute: typeof _appIndexRoute
  _appProductIdRoute: typeof _appProductIdRouteWithChildren
  _appProductsIndexRoute: typeof _appProductsIndexRoute
}

const _appRouteChildren: _appRouteChildren = {
  _appAboutRoute: _appAboutRoute,
  _appManageBrandsRoute: _appManageBrandsRouteWithChildren,
  _appManageProductsRoute: _appManageProductsRouteWithChildren,
  _appShopRoute: _appShopRouteWithChildren,
  _appIndexRoute: _appIndexRoute,
  _appProductIdRoute: _appProductIdRouteWithChildren,
  _appProductsIndexRoute: _appProductsIndexRoute,
}

const _appRouteWithChildren = _appRoute._addFileChildren(_appRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  _appRoute: _appRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
