/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as _appRouteImport } from './routes/__app'
import { Route as _appIndexRouteImport } from './routes/__app/index'
import { Route as _appAboutRouteImport } from './routes/__app/about'
import { Route as _appProductsIndexRouteImport } from './routes/__app/products/index'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const _appRoute = _appRouteImport.update({
  id: '/__app',
  getParentRoute: () => rootRouteImport,
} as any)
const _appIndexRoute = _appIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _appRoute,
} as any)
const _appAboutRoute = _appAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => _appRoute,
} as any)
const _appProductsIndexRoute = _appProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => _appRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/about': typeof _appAboutRoute
  '/': typeof _appIndexRoute
  '/products': typeof _appProductsIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/about': typeof _appAboutRoute
  '/': typeof _appIndexRoute
  '/products': typeof _appProductsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__app': typeof _appRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/__app/about': typeof _appAboutRoute
  '/__app/': typeof _appIndexRoute
  '/__app/products/': typeof _appProductsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/signup' | '/about' | '/' | '/products'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/signup' | '/about' | '/' | '/products'
  id:
    | '__root__'
    | '/__app'
    | '/login'
    | '/signup'
    | '/__app/about'
    | '/__app/'
    | '/__app/products/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _appRoute: typeof _appRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__app': {
      id: '/__app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _appRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__app/': {
      id: '/__app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof _appIndexRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/about': {
      id: '/__app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof _appAboutRouteImport
      parentRoute: typeof _appRoute
    }
    '/__app/products/': {
      id: '/__app/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof _appProductsIndexRouteImport
      parentRoute: typeof _appRoute
    }
  }
}

interface _appRouteChildren {
  _appAboutRoute: typeof _appAboutRoute
  _appIndexRoute: typeof _appIndexRoute
  _appProductsIndexRoute: typeof _appProductsIndexRoute
}

const _appRouteChildren: _appRouteChildren = {
  _appAboutRoute: _appAboutRoute,
  _appIndexRoute: _appIndexRoute,
  _appProductsIndexRoute: _appProductsIndexRoute,
}

const _appRouteWithChildren = _appRoute._addFileChildren(_appRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  _appRoute: _appRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
